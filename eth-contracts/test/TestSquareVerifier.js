const fs = require('fs');
const path = require('path');

// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
const SquareVerifier = artifacts.require("SquareVerifier");

contract('SquareVerfier', accounts => {
    const { proof: { a, a_p, b, b_p, c, c_p, h, k }, inputs } = JSON.parse(fs.readFileSync(path.join(__dirname, '../../zokrates/code/square/proof.json')));

    beforeEach(async function () {
        this.contract = await SquareVerifier.new();
    })

    // Test verification with correct proof
    it('test verification with correct proof', async function () {
        const { logs: [{ event }] } = await this.contract.verifyTx(a, a_p, b, b_p, c, c_p, h, k, inputs); 

        assert.equal(event, 'Verified', 'Correct proof should be verified');
    })

    // Test verification with incorrect proof
    it('test verfication with incorrect proof', async function () {
        const { logs } = await this.contract.verifyTx(a, a_p, b, b_p, c, c_p, h, h, inputs); 

        assert.equal(logs[0], undefined, 'Incorrect proof should be verified');
    })
})
